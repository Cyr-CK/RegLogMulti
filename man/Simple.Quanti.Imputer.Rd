% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_quanti_imputer.R
\name{Simple.Quanti.Imputer}
\alias{Simple.Quanti.Imputer}
\title{Simple quantitative NA imputer}
\description{
Class of a quantitative NA imputer object that has fit, fit_transform and transform methods to impute quantitative missing values with mean or median method.
}
\examples{
imputer <- Simple.Quanti.Imputer$new(imputation_type="mean")
imputer <- Simple.Quanti.Imputer$new(imputation_type="median")

X_train_filled <- imputer$fit_transform(X_train, c("Col_quanti_1","Col_quanti_2","Col_quanti_N"))

imputer$fit(X_train, c("Col_quanti_1","Col_quanti_2","Col_quanti_N"))
X_test_filled <- imputer$transform(X_test)

## ------------------------------------------------
## Method `Simple.Quanti.Imputer$new`
## ------------------------------------------------

# Creates a new instance of the class
imputer <- Simple.Quanti.Imputer$new(imputation_type = "median")

## ------------------------------------------------
## Method `Simple.Quanti.Imputer$fit`
## ------------------------------------------------

# Fits the object to a given dataset
imputer$fit(X_train)

## ------------------------------------------------
## Method `Simple.Quanti.Imputer$transform`
## ------------------------------------------------

# Performs a quantitative imputation on a given dataset
X_test_filled <- imputer$transform(X_test)

## ------------------------------------------------
## Method `Simple.Quanti.Imputer$fit_transform`
## ------------------------------------------------

# Fitting and imputing missing values on a given dataset
X_train_filled <- imputer$fit_transform(X_train)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{imputation_type}}{Method that will be used to impute NA.}

\item{\code{imputation_values}}{Values produced by the imputer.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Simple.Quanti.Imputer-new}{\code{Simple.Quanti.Imputer$new()}}
\item \href{#method-Simple.Quanti.Imputer-fit}{\code{Simple.Quanti.Imputer$fit()}}
\item \href{#method-Simple.Quanti.Imputer-transform}{\code{Simple.Quanti.Imputer$transform()}}
\item \href{#method-Simple.Quanti.Imputer-fit_transform}{\code{Simple.Quanti.Imputer$fit_transform()}}
\item \href{#method-Simple.Quanti.Imputer-clone}{\code{Simple.Quanti.Imputer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simple.Quanti.Imputer-new"></a>}}
\if{latex}{\out{\hypertarget{method-Simple.Quanti.Imputer-new}{}}}
\subsection{Method \code{new()}}{
This method creates a new quantitative imputer object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simple.Quanti.Imputer$new(imputation_type = "mean")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{imputation_type}}{String defining the method of NA imputation.
When it equals \code{mean}, the object is set to perform an imputation based on the mean, i.e. the average value of the feature.
When it equals \code{median}, the object is set to perform an imputation based on the median, i.e. the median value of the feature.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new quantitative imputer object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Creates a new instance of the class
imputer <- Simple.Quanti.Imputer$new(imputation_type = "median")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simple.Quanti.Imputer-fit"></a>}}
\if{latex}{\out{\hypertarget{method-Simple.Quanti.Imputer-fit}{}}}
\subsection{Method \code{fit()}}{
This method fits a quantitative imputer to data given the specified method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simple.Quanti.Imputer$fit(data, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A dataframe containing the quantitative data on which the imputer learns to fill missing values.}

\item{\code{columns}}{A vector listing the names of the columns that will get imputation (must be quantitative features).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing. The object is internally updated when using this method.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Fits the object to a given dataset
imputer$fit(X_train)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simple.Quanti.Imputer-transform"></a>}}
\if{latex}{\out{\hypertarget{method-Simple.Quanti.Imputer-transform}{}}}
\subsection{Method \code{transform()}}{
This method applies on a given dataset the transformation rules the imputer learned from the dataset it was fit to.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simple.Quanti.Imputer$transform(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A dataframe containing the quantitative data that will get missing values imputation.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe containing the data with its missing values filled.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Performs a quantitative imputation on a given dataset
X_test_filled <- imputer$transform(X_test)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simple.Quanti.Imputer-fit_transform"></a>}}
\if{latex}{\out{\hypertarget{method-Simple.Quanti.Imputer-fit_transform}{}}}
\subsection{Method \code{fit_transform()}}{
This method fits an imputer on a given dataset then fill the missing values in it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simple.Quanti.Imputer$fit_transform(data, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A dataframe containing the quantitative data that will get missing values imputation.}

\item{\code{columns}}{A vector listing the names of the columns that will get imputation (must be quantitative features).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe containing the data with its missing values filled.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Fitting and imputing missing values on a given dataset
X_train_filled <- imputer$fit_transform(X_train)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simple.Quanti.Imputer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Simple.Quanti.Imputer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simple.Quanti.Imputer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
